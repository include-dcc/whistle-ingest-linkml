// For basic demographics as well as tracking a participant's various resources, 
// we'll use FHIR's Patient resource. 
//
// For Race and Ethnicity, we'll use their respective extensions provided by
// HL7 as part of standard FHIR resources. Gender is strictly bound to 
// AdministrativeGender. For this study, it should suffice. 

def Patient_Reference(study, row) {
    // I believe the external ID will be used throughout future releases, 
    // however, if 
    $this: Reference_Key_Identifier(study, "Patient", row.participant_external_id);
}

// Description: Our Participant is basically a limited Patient record
//
// Arguments:
//  study - This is the full study object created by Whistler
//  subject - Must have a participant_id
// 
def Participant(study, subject) {
    meta.tag[]: StudyMeta(study);
    resourceType : "Patient"

    identifier[]: Key_Identifier(study, "Patient", subject.participant_external_id);
    if (subject.participant_global_id ~= "NA") {
        identifier[]: Key_Identifier(study, "Patient", subject.participant_global_id);
        identifier[1].use: "official";

        // The plan is to use this ID for the resource ids, however, we aren't
        // able to use that with the current version of the participant file. 
        // Hopefully, I won't forget to drop the affected study prior to reload
        // since those IDs will definitely not match. 
        id: StringReplace(subject.participant_global_id, "_", "-");
    } else {
        identifier[0].use: "official";
    }
    gender (if subject.sex ~= "."): HarmonizeAsCode(subject.sex, "Sex");
    extension[]: RaceExtension(subject.race);
    extension[]: EthnicityExtension(subject.ethnicity);

    deceasedBoolean (if subject.outcomes_vital_status = "Dead"): true;
}

// Description: Wrapper for generating Patient records
//
// Arguments:
//  study - This is the full study object created by Whistler
//  demo - Must have a participant_id
// 
def ProcessParticipant(study, demo) {
    //out patient: AgeAtEnrollmentObservation(study, demo);
    //out patient: AgeAt(study, demo, "AgeAtLastVitalStatus", "participant", demo.age_at_last_vital_status);
    out patient: Participant(study, demo);
}
